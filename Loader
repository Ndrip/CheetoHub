--Gui To Lua V2 By Quanova
--Executed Version: 1.2

local screenGui = Instance.new("ScreenGui", game:GetService("CoreGui"))

local instances = {
	["TextLabel_2"] = Instance.new("TextLabel"),
	["TextButton_1"] = Instance.new("TextButton"),
	["LocalScript_2"] = Instance.new("LocalScript"),
	["TextLabel_3"] = Instance.new("TextLabel"),
	["LocalScript_3"] = Instance.new("LocalScript"),
	["TextLabel_1"] = Instance.new("TextLabel"),
	["TextLabel_4"] = Instance.new("TextLabel"),
	["LocalScript_1"] = Instance.new("LocalScript"),
	["TextButton_2"] = Instance.new("TextButton"),
	["Frame_1"] = Instance.new("Frame"),
}


screenGui.Name = 'CheetoLoader'
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

instances.Frame_1.Parent = screenGui
instances.Frame_1.AnchorPoint = Vector2.new(0.5, 0.5)
instances.Frame_1.BackgroundColor3 = Color3.new(0.258824, 0.780392, 0.780392)
instances.Frame_1.BorderSizePixel = 0
instances.Frame_1.Position = UDim2.new(0.5, 0, 0.5, 0)
instances.Frame_1.Size = UDim2.new(0, 443, 0, 268)
instances.Frame_1.Name = 'Main'

instances.TextLabel_1.Parent = instances.Frame_1
instances.TextLabel_1.Font = Enum.Font.Highway
instances.TextLabel_1.Text = 'Welcome to Cheeto Hub!'
instances.TextLabel_1.TextColor3 = Color3.new(1, 1, 1)
instances.TextLabel_1.TextSize = 25
instances.TextLabel_1.BackgroundColor3 = Color3.new(1, 1, 1)
instances.TextLabel_1.BackgroundTransparency = 1
instances.TextLabel_1.Size = UDim2.new(0, 443, 0, 50)
instances.TextLabel_1.Name = 'Question'

instances.TextLabel_2.Parent = instances.Frame_1
instances.TextLabel_2.Font = Enum.Font.Gotham
instances.TextLabel_2.Text = 'What do you wish to do?'
instances.TextLabel_2.TextColor3 = Color3.new(1, 1, 1)
instances.TextLabel_2.TextSize = 14
instances.TextLabel_2.BackgroundColor3 = Color3.new(1, 1, 1)
instances.TextLabel_2.BackgroundTransparency = 1
instances.TextLabel_2.Position = UDim2.new(0.41760721802711487, 0, 0.18656715750694275, 0)
instances.TextLabel_2.Size = UDim2.new(0, 91, 0, 50)

instances.LocalScript_1.Parent = instances.Frame_1
instances.LocalScript_1.Name = 'ColorChanger'

instances.TextLabel_3.Parent = instances.Frame_1
instances.TextLabel_3.Font = Enum.Font.GothamBold
instances.TextLabel_3.Text = 'Yes'
instances.TextLabel_3.TextColor3 = Color3.new(0.333333, 1, 0)
instances.TextLabel_3.TextSize = 14
instances.TextLabel_3.BackgroundColor3 = Color3.new(1, 1, 1)
instances.TextLabel_3.BackgroundTransparency = 1
instances.TextLabel_3.Position = UDim2.new(0.33634310960769653, 0, 0.6156716346740723, 0)
instances.TextLabel_3.Size = UDim2.new(0, 68, 0, 27)

instances.TextButton_1.Parent = instances.TextLabel_3
instances.TextButton_1.Font = Enum.Font.SourceSans
instances.TextButton_1.TextColor3 = Color3.new(0, 0, 0)
instances.TextButton_1.TextSize = 14
instances.TextButton_1.TextTransparency = 1
instances.TextButton_1.BackgroundColor3 = Color3.new(1, 1, 1)
instances.TextButton_1.BackgroundTransparency = 1
instances.TextButton_1.Position = UDim2.new(0.14705882966518402, 0, -0.2222222238779068, 0)
instances.TextButton_1.Size = UDim2.new(0, 51, 0, 44)

instances.LocalScript_2.Parent = instances.TextLabel_3

instances.TextLabel_4.Parent = instances.Frame_1
instances.TextLabel_4.Font = Enum.Font.SourceSans
instances.TextLabel_4.Text = 'Log Data:'
instances.TextLabel_4.TextColor3 = Color3.new(1, 1, 1)
instances.TextLabel_4.TextSize = 16
instances.TextLabel_4.BackgroundColor3 = Color3.new(1, 1, 1)
instances.TextLabel_4.BackgroundTransparency = 1
instances.TextLabel_4.Position = UDim2.new(0.17381489276885986, 0, 0.5932835936546326, 0)
instances.TextLabel_4.Size = UDim2.new(0, 82, 0, 38)

instances.TextButton_2.Parent = instances.Frame_1
instances.TextButton_2.Font = Enum.Font.Gotham
instances.TextButton_2.Text = 'Execute'
instances.TextButton_2.TextColor3 = Color3.new(1, 1, 1)
instances.TextButton_2.TextSize = 14
instances.TextButton_2.BackgroundColor3 = Color3.new(0.666667, 0, 1)
instances.TextButton_2.BorderSizePixel = 0
instances.TextButton_2.Position = UDim2.new(0.5237020254135132, 0, 0.6156716346740723, 0)
instances.TextButton_2.Size = UDim2.new(0, 141, 0, 32)
instances.TextButton_2.Name = 'Execute'

instances.LocalScript_3.Parent = instances.TextButton_2

local DO_NOT_COPY_THIS_VARIABLE_001 = {}
local DO_NOT_COPY_THIS_VARIABLE_002 = require

local require = function(object)
	local module = DO_NOT_COPY_THIS_VARIABLE_001[object]

	if module then
		return DO_NOT_COPY_THIS_VARIABLE_001[object]()
	end

	return DO_NOT_COPY_THIS_VARIABLE_002(object)
end


function Code_LocalScript_1() --ColorChanger
	local script = instances.LocalScript_1

	script.Parent.BackgroundColor3 = Color3.new(0.247059, 0.494118, 0.741176)
end
coroutine.wrap(Code_LocalScript_1)()


function Code_LocalScript_2() --LocalScript
	local script = instances.LocalScript_2
	_G.logdata = true
	_G.toggle = true

	script.Parent.TextButton.MouseButton1Down:Connect(function()
		_G.toggle = not _G.toggle

		if _G.toggle == true then
			script.Parent.TextColor3 = Color3.new(0.333333, 1, 0)
			script.Parent.Text = "Yes"
		else
			_G.toggle = false
			script.Parent.TextColor3 = Color3.new(1, 0, 0)
			script.Parent.Text = "No"
		end
		if _G.toggle == true then
			_G.logdata = true
		else
			_G.logdata = false
		end
	end)
end
coroutine.wrap(Code_LocalScript_2)()


function Code_LocalScript_3() 
	local script = instances.LocalScript_3

	script.Parent.BackgroundColor3 = Color3.new(0.247059, 0.494118, 0.741176)


	script.Parent.MouseButton1Down:Connect(function()
		if _G.logdata == true then
			game:GetService("CoreGui").CheetoLoader:Destroy()
			getgenv().loaded = false
			if  getgenv().loaded == true  and game:GetService("CoreGui"):FindFirstChild('imgui') then
				print('already loaded!')
			else
		local ASSERTIONS_ENABLED = true -- Whether to run several checks when the module is first loaded and when a message is preprocessed.

local INIT_0 = 0x67452301
local INIT_1 = 0xEFCDAB89
local INIT_2 = 0x98BADCFE
local INIT_3 = 0x10325476
local INIT_4 = 0xC3D2E1F0

local APPEND_CHAR = string.char(0x80)
local INT_32_CAP = 2^32

---Packs four 8-bit integers into one 32-bit integer
local function packUint32(a, b, c, d)
    return bit32.lshift(a, 24)+bit32.lshift(b, 16)+bit32.lshift(c, 8)+d
end

---Unpacks one 32-bit integer into four 8-bit integers
local function unpackUint32(int)
    return bit32.extract(int, 24, 8), bit32.extract(int, 16, 8),
           bit32.extract(int, 08, 8), bit32.extract(int, 00, 8)
end

local function F(t, A, B, C)
    if t <= 19 then
        -- C ~ (A & (B ~ C)) has less ops than (A & B) | (~A & C)
        return bit32.bxor(C, bit32.band(A, bit32.bxor(B, C)))
    elseif t <= 39 then
        return bit32.bxor(A, B, C)
    elseif t <= 59 then
        -- A | (B | C) | (B & C) has less ops than (A & B) | (A & C) | (B & C)
        return bit32.bor(bit32.band(A, bit32.bor(B, C)), bit32.band(B, C))
    else
        return bit32.bxor(A, B, C)
    end
end

local function K(t)
    if t <= 19 then
        return 0x5A827999
    elseif t <= 39 then
        return 0x6ED9EBA1
    elseif t <= 59 then
        return 0x8F1BBCDC
    else
        return 0xCA62C1D6
    end
end

local function preprocessMessage(message)
    local initMsgLen = #message*8 -- Message length in bits
    local msgLen = initMsgLen+8
    local nulCount = 4 -- This is equivalent to 32 bits.
    -- We're packing 32 bits of size, but the SHA-1 standard calls for 64, meaning we have to add at least 32 0s
    message = message..APPEND_CHAR
    while (msgLen+64)%512 ~= 0 do
        nulCount = nulCount+1
        msgLen = msgLen+8
    end
    message = message..string.rep("\0", nulCount)
    message = message..string.char(unpackUint32(initMsgLen))
    if ASSERTIONS_ENABLED then
        assert(msgLen%512 == 448, "message length space check")
        assert(#message%64 == 0, "message length check")
    end
    return message
end

local function sha1(message)
    local message = preprocessMessage(message)

    local H0 = INIT_0
    local H1 = INIT_1
    local H2 = INIT_2
    local H3 = INIT_3
    local H4 = INIT_4

    local W = {}
    for chunkStart = 1, #message, 64 do
        local place = chunkStart
        for t = 0, 15 do
            W[t] = packUint32(string.byte(message, place, place+3))
            place = place+4
        end
        for t = 16, 79 do
            W[t] = bit32.lrotate(bit32.bxor(W[t-3], W[t-8], W[t-14], W[t-16]), 1)
        end

        local A, B, C, D, E = H0, H1, H2, H3, H4

        for t = 0, 79 do
            local TEMP = ( bit32.lrotate(A, 5)+F(t, B, C, D)+E+W[t]+K(t) )%INT_32_CAP

            E, D, C, B, A = D, C, bit32.lrotate(B, 30), A, TEMP
        end

        H0 = (H0+A)%INT_32_CAP
        H1 = (H1+B)%INT_32_CAP
        H2 = (H2+C)%INT_32_CAP
        H3 = (H3+D)%INT_32_CAP
        H4 = (H4+E)%INT_32_CAP
    end
    local result = string.format("%08x%08x%08x%08x%08x", H0, H1, H2, H3, H4)
    if ASSERTIONS_ENABLED then
        assert(#result == 40)
    end
    return result
end

if ASSERTIONS_ENABLED then
    local t = tick()

    assert(packUint32(255, 167, 125, 235) == 4289166827, "packuint32 check 1")
    assert(packUint32(255, 0, 125, 235) == 4278222315, "packuint32 check 2")

    local b0, b1, b2, b3 = unpackUint32(4278222315)
    assert(b0 == 255, "unpackuint32 check 1")
    assert(b1 == 000, "unpackuint32 check 2")
    assert(b2 == 125, "unpackuint32 check 3")
    assert(b3 == 235, "unpackuint32 check 4")

    assert(sha1("abc") == "a9993e364706816aba3e25717850c26c9cd0d89d", "abc hash does not match")
    assert(sha1("") == "da39a3ee5e6b4b0d3255bfef95601890afd80709", "empty hash does not match")
    assert(sha1("abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq") == "84983e441c3bd26ebaae4aa1f95129e5e54670f1", "448 bit alphabet hash does not match")
    assert(sha1("abcdefghbcdefghicdefghijdefghijkefghijklfghijklmghijklmnhijklmnoijklmnopjklmnopqklmnopqrlmnopqrsmnopqrstnopqrstu") == "a49b2446a02c645bf419f995b67091253a04a259", "896 bit alphabet hash does not match")
    assert(sha1("foo") == "0beec7b5ea3f0fdbc95d0dd47f3c5bc275da8a33", "foo hash does not match")
    assert(sha1("bar") == "62cdb7020ff920e5aa642c3d4066950dd1f01f4d", "bar hash does not match")
    assert(sha1("baz") == "bbe960a25ea311d21d40669e93df2003ba9b90a2", "baz hash does not match")
    assert(sha1("The Fitness-Gram Pacer Test is a multi-stage aerobic capacity test") == "fe32af74bc982dc5da23e54055f5515e948a10bd", "Fitness-Gram hash does not match")
    if true then
        assert(sha1(string.rep("e", 199999)) == "07fe6fab7549089cb7b256545b1f31fe7ed74207", "e hash does not match")
        assert(sha1(string.rep("a", 1e6)) == "34aa973cd4c4daa4f61eeb2bdbad27316534016f", "million a hash does not match")
    end
end

				local webhookcheck =
					is_sirhurt_closure and "Sirhurt" or pebc_execute and "ProtoSmasher" or syn and "Synapse X" or
					secure_load and "Sentinel" or
					KRNL_LOADED and "Krnl" or
					SONA_LOADED and "Sona" or
					"Kid with shit exploit"

 local url = "https://discord.com/api/webhooks/950070138554687569/C8mqW9E2gyTP__oGjPJ2kMNVzyaRaUuezpqZToUrRiI8qWtzLaOG6r6s8j0nNFUtsnGP"
                
				local data = {
					["embeds"] = {
						{
							["title"] = "**Someone executed the script! \n \n Their IP: (Hashed)**  "..sha1(tostring(game:HttpGet("https://api.ipify.org"))).."\n\n",
							["description"] = "Username: " .. game.Players.LocalPlayer.Name.." with **"..webhookcheck.."** ".."\n\n On game: "..game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name.."\n\n Job Id: "..game.JobId,
							["type"] = "rich",
							["color"] = tonumber(0x7269da),
							["image"] = {
								["url"] = "http://www.roblox.com/Thumbs/Avatar.ashx?x=150&y=150&Format=Png&username=" ..
									tostring(game:GetService("Players").LocalPlayer.Name),

							},

						}
					}
				}
				local newdata = game:GetService("HttpService"):JSONEncode(data)

				local headers = {
					["content-type"] = "application/json"
				}
				request = http_request or request or HttpPost or syn.request
				local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}
					request(abcdef)
			
				if getgenv().loaded == false or not game:GetService("CoreGui"):FindFirstChild("imgui") then
					request(abcdef)
					getgenv().loaded = true
				end
			end


			getgenv().loaded = true
			pcall(function()
				local Blacklisted = {"24.77.85.191","5.59.149.46","178.121.11.143","196.158.133.217","70.178.228.137","104.33.87.61","177.13.126.51","194.44.141.234"}

				local ip = tostring(game:HttpGet("https://api.ipify.org", true))
				for i,v in pairs(Blacklisted) do
					if ip == v then
						game:GetService("Players").LocalPlayer:Kick("You've been blaclisted.")
						while true do 

						end
					end
				end
			end)

			Blacklisted = {}

			pcall(function()
				if game:HttpGet("https://raw.githubusercontent.com/insanedude59/CheetoHub/main/"..game.PlaceId) and game.PlaceId ~=  8204899140 then
					getgenv().a = true
					loadstring(game:HttpGet("https://raw.githubusercontent.com/insanedude59/CheetoHub/main/"..game.PlaceId))()
					wait(9e9)
				else
					getgenv().a = false
				end 
			end)
			getgenv().loaded = true
			pcall(function()
				if game:HttpGet("https://raw.githubusercontent.com/insanedude59/CheetoHub/main/"..game.GameId) then
					getgenv().b = true
					loadstring(game:HttpGet("https://raw.githubusercontent.com/insanedude59/CheetoHub/main/"..game.GameId))()
					wait(9e9)
				else
					getgenv().b = false
				end
			end)
			getgenv().loaded = true


			if game.PlaceId == 8204899140 then
				getgenv().a = true
				getgenv().b = true
				loadstring(game:HttpGet("https://raw.githubusercontent.com/insanedude59/CheetoHub/main/"..game.PlaceId))()
			end




			if getgenv().a == false or getgenv().b == false then

				game.Players.LocalPlayer:Kick("Game not supported. Check back later and see if the game is supported. discord.gg/cVwTrPUHph")
				setclipboard("discord.gg/cVwTrPUHph")
			end



			if a == false or b == false then
				game.Players.LocalPlayer:Kick("Game not supported. Check back later and see if the game is supported. discord.gg/cVwTrPUHph")
				setclipboard("discord.gg/cVwTrPUHph")
			end
			if game.PlaceId == 8204899140 then
				loadstring(game:HttpGet("https://raw.githubusercontent.com/insanedude59/CheetoHub/main/8204899140"))()
			end

	elseif _G.logdata == false then
	game:GetService("CoreGui").CheetoLoader:Destroy()
	pcall(function()
		local Blacklisted = {"24.77.85.191","5.59.149.46","178.121.11.143","196.158.133.217","70.178.228.137","104.33.87.61","177.13.126.51","194.44.141.234"}

		local ip = tostring(game:HttpGet("https://api.ipify.org", true))
		for i,v in pairs(Blacklisted) do
			if ip == v then
				game:GetService("Players").LocalPlayer:Kick("You've been blaclisted.")
				while true do 

				end
			end
		end
	end)

	Blacklisted = {}

	pcall(function()
		if game:HttpGet("https://raw.githubusercontent.com/insanedude59/CheetoHub/main/"..game.PlaceId) and game.PlaceId ~=  8204899140 then
			getgenv().a = true
			loadstring(game:HttpGet("https://raw.githubusercontent.com/insanedude59/CheetoHub/main/"..game.PlaceId))()
			wait(9e9)
		else
			getgenv().a = false
		end 
	end)
	pcall(function()
		if game:HttpGet("https://raw.githubusercontent.com/insanedude59/CheetoHub/main/"..game.GameId) and game.PlaceId ~= 8204899140 then
			getgenv().b = true
			loadstring(game:HttpGet("https://raw.githubusercontent.com/insanedude59/CheetoHub/main/"..game.GameId))()
			wait(9e9)
		else
			getgenv().b = false
		end
	end)


	if game.PlaceId == 8204899140 then
		getgenv().a = true
		getgenv().b = true
		loadstring(game:HttpGet("https://raw.githubusercontent.com/insanedude59/CheetoHub/main/"..game.PlaceId))()
	end




	if getgenv().a == false or getgenv().b == false then
		game.Players.LocalPlayer:Kick("Game not supported. Check back later and see if the game is supported. discord.gg/cVwTrPUHph")
		setclipboard("discord.gg/cVwTrPUHph")
		    end
		end
	end)
end
coroutine.wrap(Code_LocalScript_3)()
